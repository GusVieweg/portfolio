# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-19 18:39
from __future__ import unicode_literals

from django.db import migrations


def correct_descriptions(apps, schema_editor):
    """
    I made a mistake regarding descriptions of certain projects. This is correcting that.
    :param apps:
    :param schema_editor:
    :return:
    """
    Project = apps.get_model("projects", "Project")

    infection = Project.objects.get(title="Infection")
    infection.description = \
    """
    A Khan Academy project written in C++ (with visual components relying on the SFML library) designed to simulate the needs for teacher/students pairs to be able to work on the same type of software regardless of who is teaching who. That is, a teacher can teach a student who in turn could also potentially teach someone else, or the original teacher.
    """,
    infection.save()

    huffman = Project.objects.get(title="Huffman Encoding")
    huffman.description = \
    """
    A graphical implementation written in Java of the huffman encoding compression algorithm. The program appears to work with the various files tested, though this testing was not rigorously performed. It enables selection of files to compress; it will also display the compression table and decompression table during compression and decompression of files respectively.
    """
    huffman.save()

    fifth = Project.objects.get(title="Fifth CAM")
    fifth.description = \
    """
    A Cellular Automata Machine (CAM) library written in Python (and using the Numpy library underneath) loosely based off the CAM Forth language as described in "Cellular Automata Machines" by Toffoli and Margolus. It incorporates N-Dimensional Cellular Automata, an arbitrary count of bit planes and description of neighborhoods, and timing specifications for granular viewing.
    """
    fifth.save()

    lodestar = Project.objects.get(title="Lodestar")
    lodestar.description = \
    """
    A feature-rich VimL plugin allowing the referencing of various computer science concepts while programming. By pressing <F2> (by default) within the vim environment, open a new window referencing the topics (i.e. lodes) stored in the $VIM/lodes directory (though this can be changed by altering the lodestar#lodes_path variable in autoload/lodestar.vim). Can also search Wikipedia for said topics from within the terminal through Lodestar.
    """
    lodestar.save()

    mingle = Project.objects.get(title="Mingle")
    mingle.description = \
    """
    An iOS application intended to allow users to generate events and create groups with random people so no one has to go anywhere alone. It allows user's to create groups of arbitrary size, create events to be viewed in a swiping manner (e.g. Tinder), and collaborate with group members via integrated group chats, or the sharing of user information (which can be privatized).
    """
    mingle.save()

class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0005_auto_20151219_1635'),
    ]

    operations = [
        migrations.RunPython(correct_descriptions),
    ]
